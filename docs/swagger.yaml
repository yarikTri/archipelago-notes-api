basePath: /
definitions:
  http.CreateDirRequest:
    properties:
      name:
        type: string
      parent_dir_id:
        type: integer
    type: object
  http.CreateNoteRequest:
    properties:
      automerge_url:
        type: string
      dir_id:
        type: integer
      title:
        type: string
    type: object
  http.ListNotesResponse:
    properties:
      notes:
        items:
          $ref: '#/definitions/models.NoteTransfer'
        type: array
    type: object
  http.UpdateDirRequest:
    properties:
      id:
        type: integer
      name:
        type: string
      subpath:
        type: string
    type: object
  http.UpdateNoteRequest:
    properties:
      automerge_url:
        type: string
      dir_id:
        type: integer
      id:
        type: string
      title:
        type: string
    type: object
  models.Dir:
    properties:
      id:
        type: integer
      name:
        type: string
      subpath:
        type: string
    type: object
  models.DirTree:
    properties:
      children:
        items:
          $ref: '#/definitions/models.DirTree'
        type: array
      id:
        type: integer
      name:
        type: string
      notes:
        items:
          $ref: '#/definitions/models.NoteTransfer'
        type: array
    type: object
  models.NoteTransfer:
    properties:
      automerge_url:
        type: string
      dir_id:
        type: integer
      id:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: yarik1448kuzmin@gmail.com
    name: Yaroslav Kuzmin
  description: Notes API
  title: Archipelago Notes API
  version: 1.0.1
paths:
  /api/dirs:
    post:
      consumes:
      - application/json
      description: Create dir
      parameters:
      - description: Dir info
        in: body
        name: dirInfo
        required: true
        schema:
          $ref: '#/definitions/http.CreateDirRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Dir created
          schema:
            $ref: '#/definitions/models.Dir'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Create dir
      tags:
      - Dirs
  /api/dirs/{dirID}:
    delete:
      description: Delete dir by ID
      parameters:
      - description: Dir ID
        in: path
        name: dirID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Dir deleted
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Delete dir
      tags:
      - Dirs
    get:
      description: Get dir by ID
      parameters:
      - description: Dir ID
        in: path
        name: dirID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Dir
          schema:
            $ref: '#/definitions/models.Dir'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Get dir
      tags:
      - Dirs
    post:
      consumes:
      - application/json
      description: Update dir by ID
      parameters:
      - description: Dir ID
        in: path
        name: dirID
        required: true
        type: integer
      - description: Dir info
        in: body
        name: dirInfo
        required: true
        schema:
          $ref: '#/definitions/http.UpdateDirRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated dir
          schema:
            $ref: '#/definitions/models.Dir'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Update dir
      tags:
      - Dirs
  /api/dirs/{dirID}/tree:
    get:
      description: Get subtree of dir with id {dirID}
      produces:
      - application/json
      responses:
        "200":
          description: Dir tree
          schema:
            $ref: '#/definitions/models.DirTree'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Get dir Tree
      tags:
      - Dirs
  /api/notes:
    get:
      description: Get all notes
      produces:
      - application/json
      responses:
        "200":
          description: Notes
          schema:
            $ref: '#/definitions/http.ListNotesResponse'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: List notes
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: Create note
      parameters:
      - description: Note info
        in: body
        name: noteInfo
        required: true
        schema:
          $ref: '#/definitions/http.CreateNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Note created
          schema:
            $ref: '#/definitions/models.NoteTransfer'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Create note
      tags:
      - Notes
  /api/notes/{noteID}:
    delete:
      description: Delete note by ID
      parameters:
      - description: Note ID
        in: path
        name: noteID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Note deleted
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Delete note
      tags:
      - Notes
    get:
      description: Get note by ID
      parameters:
      - description: Note ID
        in: path
        name: noteID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Note
          schema:
            $ref: '#/definitions/models.NoteTransfer'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Get note
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: Update note by ID
      parameters:
      - description: Note ID
        in: path
        name: noteID
        required: true
        type: integer
      - description: Note info
        in: body
        name: noteInfo
        required: true
        schema:
          $ref: '#/definitions/http.UpdateNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated note
          schema:
            $ref: '#/definitions/models.NoteTransfer'
        "400":
          description: Incorrect input
          schema: {}
        "500":
          description: Server error
          schema: {}
      summary: Update note
      tags:
      - Notes
schemes:
- https
- http
swagger: "2.0"
