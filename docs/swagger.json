{
    "schemes": [
        "https",
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Notes API",
        "title": "Archipelago Notes API",
        "contact": {
            "name": "Yaroslav Kuzmin",
            "email": "yarik1448kuzmin@gmail.com"
        },
        "version": "1.0.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/dirs": {
            "post": {
                "description": "Create dir",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dirs"
                ],
                "summary": "Create dir",
                "parameters": [
                    {
                        "description": "Dir info",
                        "name": "dirInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateDirRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dir created",
                        "schema": {
                            "$ref": "#/definitions/models.Dir"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/dirs/{dirID}": {
            "get": {
                "description": "Get dir by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dirs"
                ],
                "summary": "Get dir",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dir ID",
                        "name": "dirID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dir",
                        "schema": {
                            "$ref": "#/definitions/models.Dir"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Update dir by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dirs"
                ],
                "summary": "Update dir",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dir ID",
                        "name": "dirID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dir info",
                        "name": "dirInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateDirRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated dir",
                        "schema": {
                            "$ref": "#/definitions/models.Dir"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete dir by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dirs"
                ],
                "summary": "Delete dir",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dir ID",
                        "name": "dirID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dir deleted"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/dirs/{dirID}/tree": {
            "get": {
                "description": "Get subtree of dir with id {dirID}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dirs"
                ],
                "summary": "Get dir Tree",
                "responses": {
                    "200": {
                        "description": "Dir tree",
                        "schema": {
                            "$ref": "#/definitions/models.DirTree"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/notes": {
            "get": {
                "description": "Get all notes user has access to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "List notes",
                "responses": {
                    "200": {
                        "description": "Notes",
                        "schema": {
                            "$ref": "#/definitions/http.ListNotesResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Create note",
                "parameters": [
                    {
                        "description": "Note info",
                        "name": "noteInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note created",
                        "schema": {
                            "$ref": "#/definitions/models.NoteTransfer"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/notes/{noteID}": {
            "get": {
                "description": "Get note by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Get note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note",
                        "schema": {
                            "$ref": "#/definitions/models.NoteTransfer"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Update note by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Update note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Note info",
                        "name": "noteInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated note",
                        "schema": {
                            "$ref": "#/definitions/models.NoteTransfer"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete note by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Delete note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note deleted"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/notes/{noteID}/access/{userID}": {
            "post": {
                "description": "Set access to note to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Set Access",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User to set access ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Note info",
                        "name": "access",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.SetAccessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note deleted"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/create": {
            "post": {
                "description": "Create a new tag and link it to a note, or link existing tag if it exists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Create and link tag to note",
                "parameters": [
                    {
                        "description": "Tag info",
                        "name": "tagInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateAndLinkTagRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tag created and linked",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/delete": {
            "post": {
                "description": "Delete a tag and all its relations (notes and linked tags)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Delete tag",
                "parameters": [
                    {
                        "description": "Tag ID",
                        "name": "tagInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.DeleteTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag deleted"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/link": {
            "post": {
                "description": "Create a link between two tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Link two tags together",
                "parameters": [
                    {
                        "description": "Tag IDs",
                        "name": "tagInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.LinkTagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags linked"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {}
                    },
                    "409": {
                        "description": "Tags already linked",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/note/{noteID}": {
            "get": {
                "description": "Get all tags linked to a specific note",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get tags by note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tag"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/suggest": {
            "post": {
                "description": "Generate tag suggestions using LLM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Suggest tags for given text",
                "parameters": [
                    {
                        "description": "Text to generate tags for",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.suggestTagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.suggestTagsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/tags/unlink": {
            "post": {
                "description": "Remove the link between a tag and a note, delete tag if it has no more links",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Unlink tag from note",
                "parameters": [
                    {
                        "description": "Tag and note IDs",
                        "name": "tagInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UnlinkTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag unlinked"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/unlink-tags": {
            "post": {
                "description": "Remove the link between two tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Unlink two tags",
                "parameters": [
                    {
                        "description": "Tag IDs",
                        "name": "tagInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.LinkTagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags unlinked"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/update": {
            "put": {
                "description": "Update the name of an existing tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Update tag",
                "parameters": [
                    {
                        "description": "Tag update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated tag",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {}
                    },
                    "409": {
                        "description": "Tag name conflict",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/{tagID}/closest": {
            "get": {
                "description": "Get a list of tags closest to the given tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "List closest tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tagID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Closest tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tag"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/{tagID}/linked": {
            "get": {
                "description": "Get all tags linked to a specific tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get linked tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tagID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Linked tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tag"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/{tagID}/notes": {
            "get": {
                "description": "Get all notes linked to a specific tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get notes by tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tagID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NoteTransfer"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/tags/{tag_id}/link/{note_id}": {
            "post": {
                "description": "Link an existing tag to a note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Link existing tag to note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "note_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tag linked"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {}
                    },
                    "404": {
                        "description": "Tag or note not found",
                        "schema": {}
                    },
                    "409": {
                        "description": "Tag already linked",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/users/": {
            "get": {
                "description": "Search users by query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Search users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query of search",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found users",
                        "schema": {
                            "$ref": "#/definitions/http.SearchUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/users/{userID}": {
            "get": {
                "description": "Get user by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User",
                        "schema": {
                            "$ref": "#/definitions/models.UserTransfer"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/users/{userID}/confirm_email": {
            "post": {
                "description": "Confirm user's email",
                "tags": [
                    "Users"
                ],
                "summary": "Confirm email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email confirmed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/users/{userID}/root_dir/{rootDirID}": {
            "post": {
                "description": "Set root dir id by user id",
                "tags": [
                    "Users"
                ],
                "summary": "Set root dir id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Root dir ID",
                        "name": "rootDirID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Root dir setted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/users/{userID}/send_email_confirmation": {
            "post": {
                "description": "Send user's email confirmation",
                "tags": [
                    "Users"
                ],
                "summary": "Send email confirmation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mail sent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "http.CreateAndLinkTagRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "note_id": {
                    "type": "string"
                }
            }
        },
        "http.CreateDirRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "parent_dir_id": {
                    "type": "integer"
                }
            }
        },
        "http.CreateNoteRequest": {
            "type": "object",
            "properties": {
                "automerge_url": {
                    "type": "string"
                },
                "dir_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "http.DeleteTagRequest": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "string"
                }
            }
        },
        "http.LinkTagsRequest": {
            "type": "object",
            "properties": {
                "tag1_id": {
                    "type": "string"
                },
                "tag2_id": {
                    "type": "string"
                }
            }
        },
        "http.ListNotesResponse": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NoteTransfer"
                    }
                }
            }
        },
        "http.SearchUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserTransfer"
                    }
                }
            }
        },
        "http.SetAccessRequest": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "with_invitation": {
                    "type": "boolean"
                }
            }
        },
        "http.UnlinkTagRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "string"
                }
            }
        },
        "http.UpdateDirRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "subpath": {
                    "type": "string"
                }
            }
        },
        "http.UpdateNoteRequest": {
            "type": "object",
            "properties": {
                "automerge_url": {
                    "type": "string"
                },
                "default_access": {
                    "type": "string"
                },
                "dir_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "http.UpdateTagRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "string"
                }
            }
        },
        "http.suggestTagsRequest": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "tags_num": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "http.suggestTagsResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Dir": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "subpath": {
                    "type": "string"
                }
            }
        },
        "models.DirTree": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DirTree"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.NoteTransfer": {
            "type": "object",
            "properties": {
                "allowed_methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "automerge_url": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "default_access": {
                    "type": "string"
                },
                "dir_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.UserTransfer": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "email_confirmed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "root_dir_id": {
                    "type": "integer"
                }
            }
        }
    }
}